{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","reversed","setReversed","className","type","classNames","ALPABET","onClick","LENGTH","goods","sortBy","isReversed","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,eAAAA,E,mBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAiCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYN,IAAaL,EAASY,UAGtCC,QAAS,kBAAMP,EAAYN,EAASY,UATtC,iCAcA,wBACEH,UAAWE,IACT,SACA,aACA,CACE,WAAYN,IAAaL,EAASc,SAGtCJ,KAAK,SACLG,QAAS,kBAAMP,EAAYN,EAASc,SATtC,4BAcA,wBACEJ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaJ,IAGjBM,QAAS,kBAAML,GAAaD,IAT9B,sBAeEA,GAAYF,IAAaL,EAASI,OAElC,wBACEM,KAAK,SACLD,UAAU,4BACVI,QAxDU,WAClBP,EAAYN,EAASI,MACrBI,GAAY,IAmDN,sBAUJ,6BACE,6BA1FoB,SACxBO,EADwB,GAGpB,IADQC,EACT,EADDX,SAAkBY,EACjB,EADiBA,WAEdC,EAAY,YAAOH,GAEzB,OAAQC,GACN,IAAK,WACHE,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAWjD,OAJIN,GACFC,EAAaM,UAGRN,EAoEAO,CACCxB,EAAiB,CAAEI,WAAUY,WAAYV,IAExCmB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC7HtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99d9a8a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'default',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reversed, setReversed] = useState(false);\n\n  const getReorderedGoods = (\n    goods: string[],\n    { sortType: sortBy, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    switch (sortBy) {\n      case 'alphabet':\n        visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n        break;\n\n      case 'length':\n        visibleGoods.sort((g1, g2) => g1.length - g2.length);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const defaultData = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !reversed,\n            },\n          )}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(\n          reversed || sortType !== SortType.NONE\n        ) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={defaultData}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer, { sortType, isReversed: reversed },\n          )\n            .map((product) => (\n              <li data-cy=\"Good\" key={product}>\n                {product}\n              </li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}